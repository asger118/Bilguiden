@model Bilguiden.dk.Models.Biler
@using Bilguiden.dk.Models


@using (Html.BeginForm("TilføjBil", "Home", FormMethod.Post, new { enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()

<div class="indhold">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="grid--50-50">
        <!--Data mærke-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Mærke, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Mærke, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mærke, "", new { @class = "text-danger" })
        </div>

        <!--Data model-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="grid--50-50">
        <!--Data Årgang-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Årgang, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Årgang, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Årgang, "", new { @class = "text-danger" })
        </div>

        <!--Data Nypris-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Nypris, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Nypris, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nypris, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="grid--50-50">
        <!--Data Gearkasse-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Gearkasse, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Gearkasse, new SelectList(Enum.GetValues(typeof(Gearkasse))), "Vælg type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gearkasse, "", new { @class = "text-danger" })
        </div>

        <!--Data Træk-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Træk, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Træk, new SelectList(Enum.GetValues(typeof(Træk))), "Vælg type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Træk, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="grid--50-50">
        <!--Data Lastevne-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Lastevne, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Lastevne, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Lastevne, "", new { @class = "text-danger" })
        </div>

        <!--Data Vægt-->
        <div class="form-group">
            @Html.LabelFor(model => model.Vægt, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Vægt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Vægt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="grid--50-50">
        <!--Data Acceleration-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Acceleration, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Acceleration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Acceleration, "", new { @class = "text-danger" })
        </div>

        <!--Data Hestekræfter-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Hestekræfter, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Hestekræfter, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Hestekræfter, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="grid--50-50">
        <!--Data Newtonmeter-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Newtonmeter, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Newtonmeter, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Newtonmeter, "", new { @class = "text-danger" })
        </div>

        <!--Data Motor-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Motor, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Motor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Motor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="grid--50-50">
        <!--Data drivmiddel-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Drivmiddel, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Drivmiddel, new SelectList(Enum.GetValues(typeof(Drivmiddel))), "Vælg type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Drivmiddel, "", new { @class = "text-danger" })
        </div>

        <!--Data Kubik-->
        <div class="field padding-bottom--24">
            @Html.LabelFor(model => model.Kubik, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Kubik, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Kubik, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!--Billede-->
    <div class="form-group">
        @Html.LabelFor(model => model.Billede, htmlAttributes: new { @class = "control-label" })
        <input type="file" id="image1" name="image1" />
    </div>


    <input type="submit" value="Tilføj" class="bn3637 bn36"/>
    @Html.ActionLink("Tilbage", "Biler", "home", htmlAttributes: new { @class = "bn3637 bn36" })
</div>

<!--Success meddelse, hvis dataen er gemt-->
}
@if (ViewBag.SavedData == true) { /*her tjekker den om dataen er gemt*/
    <p class="alert alert-success"><strong>Success!</strong> Din bil er tilføjet!</p>
}

